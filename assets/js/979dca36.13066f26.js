"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[462],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8625:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const a={},i="C++",l={unversionedId:"vscode/cpp",id:"vscode/cpp",title:"C++",description:"IntelliSense Configurations (C/C++ plugin)",source:"@site/docs/vscode/cpp.md",sourceDirName:"vscode",slug:"/vscode/cpp",permalink:"/notes/vscode/cpp",draft:!1,editUrl:"https://github.com/hasauino/notes/edit/master/docs/vscode/cpp.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Desktop",permalink:"/notes/Ubuntu/desktop"}},c={},s=[{value:"IntelliSense Configurations (C/C++ plugin)",id:"intellisense-configurations-cc-plugin",level:2},{value:"C++ Configuration",id:"c-configuration",level:2},{value:"Formatting",id:"formatting",level:2}],p={toc:s};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"c"},"C++"),(0,o.kt)("h2",{id:"intellisense-configurations-cc-plugin"},"IntelliSense Configurations (C/C++ plugin)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("kbd",null,"ctrl"),"+",(0,o.kt)("kbd",null,"shift"),"+",(0,o.kt)("kbd",null,"p"),", search of `C/C++ Edit configurations (UI)`. You can change C++ standard there as well")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/cpp/config-linux"},"https://code.visualstudio.com/docs/cpp/config-linux")),(0,o.kt)("h2",{id:"c-configuration"},"C++ Configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "configurations": [\n        {\n            "name": "Linux",\n            "includePath": [\n                "${workspaceFolder}/**"\n            ],\n            "defines": [],\n            "compilerPath": "/usr/bin/g++",\n            "cStandard": "c17",\n            "intelliSenseMode": "linux-clang-x64",\n            "compileCommands": "${config:cmake.buildDirectory}/compile_commands.json",\n            "configurationProvider": "ms-vscode.makefile-tools"\n        }\n    ],\n    "version": 4\n}\n')),(0,o.kt)("p",null,"this line:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"compileCommands": "${config:cmake.buildDirectory}/compile_commands.json",\n')),(0,o.kt)("p",null,"will allow vs code to navigate and fine project header files."),(0,o.kt)("p",null,"this line:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"compilerPath": "/usr/bin/g++",\n')),(0,o.kt)("p",null,"allows vscode to find C++ standard library recognized by the compiler."),(0,o.kt)("h2",{id:"formatting"},"Formatting"),(0,o.kt)("p",null,"After installing C++ extension, you can add ",(0,o.kt)("inlineCode",{parentName:"p"},".clang-format")," to the workspace, or define it globally somewhere else. To define it globally: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Go to settings and search for ",(0,o.kt)("inlineCode",{parentName:"li"},"clang_format_style")),(0,o.kt)("li",{parentName:"ul"},"define the path to your Clang file, example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"file:/home/hassan/.clang-format\n")))}u.isMDXComponent=!0}}]);